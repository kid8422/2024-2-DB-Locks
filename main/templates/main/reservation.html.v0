<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Locker Reservation</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            max-width: 1440px;
            margin: 0 auto;
            padding: 20px;
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .container {
            display: grid;
            grid-template-columns: 300px 1fr;
            grid-gap: 20px;
            height: calc(100vh - 40px);
        }

        .left-panel {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            height: 100%;
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .info-card {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 16px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .info-title {
            font-size: 1.25rem;
            font-weight: bold;
            margin-bottom: 8px;
        }

        .info-item {
            font-size: 0.875rem;
            color: #555;
            margin-bottom: 4px;
        }

        .reservation-status {
            margin-bottom: 20px;
        }

        .center-panel {
            display: flex;
            flex-direction: column;
            height: 100%;
        }

        .map-placeholder {
            height: 300px;
            background-color: #e5e7eb;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .locker-selection {
            flex: 1;
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            overflow-x: auto;
        }

        .locker-grid {
            display: grid;
            grid-auto-flow: column;
            grid-template-rows: repeat(5, minmax(0, 1fr));
            gap: 8px;
            padding: 4px;
        }

        .locker-item {
            width: 64px;
            height: 64px;
            background-color: #f8f9fa;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            transition: transform 0.2s, brightness 0.2s;
        }

        .locker-item:hover {
            transform: scale(1.05);
        }

        .locker-item:disabled {
            pointer-events: none;
            opacity: 0.5;
        }

        .locker-label {
            font-size: 10px;
            color: gray;
        }

        .locker-number {
            font-size: 18px;
            font-weight: bold;
            color: black;
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">
    <div class="container">
        <!-- Left Panel -->
        <div class="left-panel">
            <div class="info-card">
                <h2 class="info-title">내 정보</h2>
                <p class="info-item">이름: <span class="font-bold">{{ user_info.name }}</span></p>
                <p class="info-item">학과: <span class="font-bold">{{ user_info.department }}</span></p>
                <p class="info-item">학번: <span class="font-bold">{{ user_info.student_id }}</span></p>
            </div>

            <!-- 나의 예약 현황 버튼 -->
            <div class="reservation-status">
                <button id="my-reservation-btn" class="w-full bg-gray-300 text-black rounded-lg py-2 font-semibold">
                    나의 예약 현황
                </button>
                <div id="reservation-info" class="mt-4"></div>
            </div>

            <!-- 구역 선택 -->
            <div class="area-selection mt-auto">
                <h3 class="text-xl font-semibold">구역 선택</h3>
                <div class="mt-4 flex space-x-4">
                    <button id="btn-4F" class="flex-1 bg-blue-500 text-white rounded-lg">형남공학관 4F</button>
                    <button id="btn-B1" class="flex-1 bg-gray-200 rounded-lg">형남공학관 B1</button>
                </div>
            </div>
        </div>

        <!-- Center Panel -->
        <div class="center-panel">
            <!-- Map Placeholder -->
            <div class="map-placeholder">
                <img src="형남4F.png" alt="형남공학관 지도" class="h-full w-full object-contain rounded-lg" id="map-image">
            </div>

            <!-- Locker Selection -->
            <div class="locker-selection">
                <h3 class="text-xl font-semibold mb-4" id="locker-title">사물함 선택</h3>
                <div id="locker-grid" class="locker-grid"></div>
            </div>
        </div>
    </div>

    <script>
         // 예약 정보 (가정: DB에서 불러오는 변수)
         const reservationData = {
            lockerNumber: 28,
            startDate: "2024-11-28",
            rentalPeriod: "30일",
        };

        // 층별 사물함 데이터
        const floorData = {
            "4F": {
                lockers: Array.from({ length: 70 }, (_, i) => ({
                    id: i + 21, // 사물함 번호 21~90
                    status: [23, 28, 35, 56, 63, 84].includes(i + 21) ? "reserved" : "available",
                })),
                image: "형남4F.png",
                title: "형남공학관 4층 사물함",
            },
            "B1": {
                lockers: Array.from({ length: 20 }, (_, i) => ({
                    id: i + 1, // 사물함 번호 1~20
                    status: [3, 7, 15].includes(i + 1) ? "reserved" : "available",
                })),
                image: "형남B1.png",
                title: "형남공학관 B1 사물함",
            },
        };

        // DOM 요소 선택
        const lockerGrid = document.getElementById("locker-grid");
        const mapImage = document.getElementById("map-image");
        const lockerTitle = document.getElementById("locker-title");
        const btn4F = document.getElementById("btn-4F");
        const btnB1 = document.getElementById("btn-B1");
        const reservationInfo = document.getElementById("reservation-info");
        const myReservationBtn = document.getElementById("my-reservation-btn");
        const buttons = [btn4F, btnB1];

        // 사물함 데이터 렌더링 함수
        function renderLockers(floor) {
            const { lockers, image, title } = floorData[floor];
            lockerGrid.innerHTML = ""; // 기존 사물함 지우기
            mapImage.src = image; // 지도 이미지 변경
            lockerTitle.textContent = title; // 제목 변경

            lockers.forEach(locker => {
                const button = document.createElement("button");
                button.className = "locker-item";
                button.disabled = locker.status === "reserved";

                button.innerHTML = `
                    <div class="locker-label">${locker.status === "reserved" ? "예약됨" : "A 구역"}</div>
                    <hr class="my-1 w-8 border-gray-300">
                    <div class="locker-number">${locker.id}</div>
                `;

                // 예약 이벤트 처리
                if (locker.status === "available") {
                    button.addEventListener("click", () => {
                        myReservedLocker = locker.id; // 예약
                        alert(`${locker.id}번 사물함을 예약했습니다.`);
                    });
                }

                lockerGrid.appendChild(button);
            });

            // 버튼 활성화 상태 업데이트
            updateButtonStyles(floor);
        }

        // 버튼 스타일 업데이트 함수
        function updateButtonStyles(activeFloor) {
            buttons.forEach(button => {
                if (button.id === `btn-${activeFloor}`) {
                    button.classList.remove("bg-gray-200", "text-black");
                    button.classList.add("bg-blue-500", "text-white");
                } else {
                    button.classList.remove("bg-blue-500", "text-white");
                    button.classList.add("bg-gray-200", "text-black");
                }
            });
        }

    
        // 나의 예약 현황 확인
        myReservationBtn.addEventListener("click", () => {
            reservationInfo.innerHTML = `
                <div class="status-card">
                    <p class="status-item font-bold text-lg text-blue-600">예약한 사물함 정보</p>
                    <p class="status-item">사물함 번호: <span class="font-bold">${reservationData.lockerNumber}</span></p>
                    <p class="status-item">대여 날짜: <span class="font-bold">${reservationData.startDate}</span></p>
                    <p class="status-item">대여 기간: <span class="font-bold">${reservationData.rentalPeriod}</span></p>
                </div>
            `;
        });

        // 버튼 클릭 이벤트
        btn4F.addEventListener("click", () => renderLockers("4F"));
        btnB1.addEventListener("click", () => renderLockers("B1"));

        // 초기 화면 렌더링 (4F)
        renderLockers("4F");
    </script>
</body>
</html>
